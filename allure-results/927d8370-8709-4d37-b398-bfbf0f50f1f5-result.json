{"name": "test_dashboard_refresh", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'Stopped' in '\\x1b[94m╭────────────────────────────────────────────────────────────────────────────────────────────────────────────...────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\\x1b[0m\\n'", "trace": "mock_process_list = [<MagicMock id='4372598800'>, <MagicMock id='4372599808'>, <MagicMock id='4372599472'>, <MagicMock id='4372602832'>], mock_process_iter = None\n\n    def test_dashboard_refresh(mock_process_list,mock_process_iter):\n        \"\"\"Test that the dashboard updates correctly when process statuses change.\n        inital mock with status, change the status and validate\n        \"\"\"\n        monitor = Monitor(process_names=[\"chrome\", \"VS code\"], interval=1)\n    \n        mock_process_list[0].is_running.return_value = True\n        mock_process_list[1].is_running.return_value = False\n        with monitor.console.capture() as capture:\n            monitor.console.print(monitor.generate_dashboard())\n        initial_rendered_text = capture.get()\n    \n        # Change process status \"VS code\" to \"Running\"\n        mock_process_list[1].is_running.return_value = True\n    \n        with monitor.console.capture() as capture:\n            monitor.console.print(monitor.generate_dashboard())\n        updated_rendered_text = capture.get()\n    \n>       assert \"Stopped\" in initial_rendered_text  # Validate \"VS code\" state == \"Stopped\"\nE       AssertionError: assert 'Stopped' in '\\x1b[94m╭────────────────────────────────────────────────────────────────────────────────────────────────────────────...────────────────────────────────────────────────────────────────────────────────────────────────────────────╯\\x1b[0m\\n'\n\ntests/test_monitor.py:74: AssertionError"}, "description": "Test that the dashboard updates correctly when process statuses change.\ninital mock with status, change the status and validate\n", "start": 1743319638527, "stop": 1743319638528, "uuid": "533f2502-1a09-4cfd-8a70-c2bfed68f6c8", "historyId": "1b7bf9bc86afa69e479d4e6d29d53fc0", "testCaseId": "1b7bf9bc86afa69e479d4e6d29d53fc0", "fullName": "tests.test_monitor#test_dashboard_refresh", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_monitor"}, {"name": "host", "value": "Mac.lan"}, {"name": "thread", "value": "7070-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_monitor"}]}