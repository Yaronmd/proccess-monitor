{"name": "test_monitor_initialization", "status": "broken", "statusDetails": {"message": "ValueError: Failed to find any process for {'chrome'}", "trace": "def test_monitor_initialization():\n        \"\"\"Test that the Monitor class initializes correctly with given process names and interval.\"\"\"\n>       monitor = Monitor(process_names=[\"chrome\"], interval=1)\n\ntests/test_monitor.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmonitor/monitor.py:22: in __init__\n    self.monitored_processes = self.get_initial_processes()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <monitor.monitor.Monitor object at 0x104fd8190>\n\n    def get_initial_processes(self) -> list:\n        \"\"\"Fetch all running processes and filter the required ones.\"\"\"\n        monitored = []\n        for proc in psutil.process_iter(attrs=[\"name\"]):\n            try:\n                if proc.info[\"name\"] in self.process_names:\n                    monitored.append(proc)\n            except (psutil.NoSuchProcess, psutil.AccessDenied):\n                continue\n        if not monitored:\n>           raise ValueError(f\"Failed to find any process for {self.process_names}\")\nE           ValueError: Failed to find any process for {'chrome'}\n\nmonitor/monitor.py:35: ValueError"}, "description": "Test that the Monitor class initializes correctly with given process names and interval.", "start": 1743107152806, "stop": 1743107152814, "uuid": "ba8b7cf0-5ff0-4af1-bad8-90717af48c6c", "historyId": "501988f59648aba0f9acb4d7134031a6", "testCaseId": "501988f59648aba0f9acb4d7134031a6", "fullName": "tests.test_monitor#test_monitor_initialization", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_monitor"}, {"name": "host", "value": "Mac.lan"}, {"name": "thread", "value": "46957-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_monitor"}]}